.npmrc
save-exact=true

tsconfig.json
"baseUrl": "./",                                 
    "paths": {
      "@/*": ["./src/*"]
    }, 

prisma
Npm i prisma -D
npx prisma init
npx prisma generate
# npm i @prisma/client

docker run --name ApiSolid-postgresql -e POSTGRESQL_USERNAME=docker -e POSTGRESQL_PASSWORD=docker -e POSTGRESQL_DATABASE=apisolid -p 5432:5432 bitnami/postgresql:latest

npx prisma migrate dev

bcryptjs

Repository Pattern

Vitest
npm i vite-tsconfig-paths -D

https://martinfowler.com/bliki/InMemoryTestDatabase.html

coverage
Vitestui

Red, green and Refactor:

jwt

 npm i @fastify/jwt

 test environment

 npm link

 npm-run-all

 schema 

 npm i supertest -D        

 Integrando com front-end
Caso precise integrar com o front-end, você deve ter se deparado com o refreshToken não sendo setado nos cookies do navegador, para resolver esse problema, ilustraremos a solução utilizando o Axios:

No servidor, adicione a propriedade credentials como true:
app.register(cors, {
  origin: true,
  credentials: true,
})
No create ou nas requisições do Axios, adicione o withCredentials como true:
const api = axios.create({
  baseURL: 'http://localhost:3333',
  withCredentials: true,
})                                                                     

 npm i @fastify/cookie